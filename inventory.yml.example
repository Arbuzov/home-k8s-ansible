# Пример инвентаря с разными версиями Kubernetes на разных нодах

all:
  children:
    kubernetes_cluster:
      children:
        masters:
          hosts:
            pi4-master:
              ansible_host: 192.168.99.44
              node_role: master
              node_taints: []  # Мастер также является worker
              kubernetes_version: "1.33.1"
              kubernetes_major_minor: "1.33"
        workers:
          hosts:
            pi3-worker1:
              ansible_host: 192.168.99.101
              node_role: worker
              kubernetes_version: "1.33.1"  # Тот же мажор что и мастер
              kubernetes_major_minor: "1.33"
            pi3-worker2:
              ansible_host: 192.168.99.102
              node_role: worker
              kubernetes_version: "1.33.1"  # Можно указать другую патч-версию
              kubernetes_major_minor: "1.33"
            pi4-worker3:
              ansible_host: 192.168.99.103
              node_role: worker
              kubernetes_version: "1.32.5"  # Пример с предыдущей версией
              kubernetes_major_minor: "1.32"

  vars:
    # Общие переменные для всех хостов
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

# Примеры использования:
#
# 1. Для постепенного обновления кластера:
#    - Сначала обновляется мастер до новой версии
#    - Затем поочередно обновляются worker ноды
#
# 2. Для тестирования совместимости:
#    - Мастер на стабильной версии
#    - Тестовые worker ноды на новых версиях
#
# 3. Для rolling update:
#    - Разные worker ноды на разных версиях
#    - Постепенное обновление без простоя
#
# Важно:
# - Kubernetes поддерживает version skew до 1 минорной версии
# - Worker ноды могут быть на 1 минорную версию старше мастера
# - Но мастер не должен быть старше worker нод
