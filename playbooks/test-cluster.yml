---
- name: Test Kubernetes Cluster
  hosts: masters
  become: yes
  gather_facts: no

  tasks:
    - name: Create test namespace
      kubernetes.core.k8s:
        name: ansible-test
        api_version: v1
        kind: Namespace
        state: present
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Deploy test nginx pod
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: nginx-test
            namespace: ansible-test
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: nginx-test
            template:
              metadata:
                labels:
                  app: nginx-test
              spec:
                containers:
                - name: nginx
                  image: nginx:alpine
                  ports:
                  - containerPort: 80
                  resources:
                    requests:
                      memory: "64Mi"
                      cpu: "50m"
                    limits:
                      memory: "128Mi"
                      cpu: "100m"
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Create test service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: nginx-test-service
            namespace: ansible-test
          spec:
            selector:
              app: nginx-test
            ports:
            - port: 80
              targetPort: 80
            type: ClusterIP
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Wait for deployment to be ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: nginx-test
        namespace: ansible-test
        wait: true
        wait_condition:
          type: Available
          status: "True"
        wait_timeout: 300
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Get test pods
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: ansible-test
        label_selectors:
          - app=nginx-test
      register: test_pods
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Display test results
      debug:
        msg: |
          ‚úÖ –¢–µ—Å—Ç –∫–ª–∞—Å—Ç–µ—Ä–∞ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!
          üìä –ó–∞–ø—É—â–µ–Ω–æ –ø–æ–¥–æ–≤: {{ test_pods.resources | length }}
          üîó –ü–æ–¥—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –ø–æ –Ω–æ–¥–∞–º:
          {% for pod in test_pods.resources %}
          - {{ pod.metadata.name }} –Ω–∞ –Ω–æ–¥–µ {{ pod.spec.nodeName }}
          {% endfor %}

    - name: Test pod connectivity
      kubernetes.core.k8s_exec:
        namespace: ansible-test
        pod: "{{ test_pods.resources[0].metadata.name }}"
        command: |
          wget -qO- nginx-test-service.ansible-test.svc.cluster.local:80 | head -1
      register: connectivity_test
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Display connectivity test
      debug:
        msg: |
          üåê –¢–µ—Å—Ç —Å–≤—è–∑–Ω–æ—Å—Ç–∏: {{ '–ü–†–û–®–ï–õ' if connectivity_test.rc == 0 else '–ù–ï –ü–†–û–®–ï–õ' }}
          üìù –û—Ç–≤–µ—Ç: {{ connectivity_test.stdout | default('–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞') }}

    - name: Cleanup test resources
      kubernetes.core.k8s:
        state: absent
        api_version: v1
        kind: Namespace
        name: ansible-test
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      when: cleanup_test | default(true)
